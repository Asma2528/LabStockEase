import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';

export const GeneralApi = createApi({
    reducerPath: 'GeneralApi',
    baseQuery: fetchBaseQuery({ baseUrl: import.meta.env.VITE_BACKEND_URL }),
    tagTypes: ['Generals'],
    endpoints: (builder) => ({
        // Query to get all generals with optional filters
        getAllGenerals: builder.query({
            query: (filters) => ({
                url: '/general/all',
                method: 'GET',
                params: filters,
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('token'),
                },
            }),
            providesTags: ['Generals'],
        }),

        // Query to get a general by ID
        getGeneralById: builder.query({
            query: (id) => ({
                url: `/general/${id}`,
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('token'),
                },
            }),
            providesTags: ['Generals'],
        }),

        // Mutation to add a new general
        addGeneral: builder.mutation({
            query: (generalData) => ({
                url: '/general/create',
                method: 'POST',
                body: generalData,
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('token'),
                    'Content-Type': 'application/json',
                },
            }),
            invalidatesTags: ['Generals'],
        }),

        // Mutation to update a general
        updateGeneral: builder.mutation({
            query: ({ id, ...updateData }) => ({
                url: `/general/update/${id}`,
                method: 'PATCH',
                body: JSON.stringify(updateData),
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('token')}`,
                    'Content-Type': 'application/json',
                },
            }),
            invalidatesTags: ['Generals'],
        }),

        // Mutation to delete a general
        deleteGeneral: builder.mutation({
            query: (id) => ({
                url: `/general/delete/${id}`,
                method: 'DELETE',
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('token'),
                },
            }),
            invalidatesTags: ['Generals'],
        }),
    }),
});

// Exporting the hooks generated by RTK Query
export const {
    useGetAllGeneralsQuery,
    useGetGeneralByIdQuery,
    useAddGeneralMutation,
    useUpdateGeneralMutation,
    useDeleteGeneralMutation,
} = GeneralApi;
